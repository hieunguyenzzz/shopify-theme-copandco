
<div class=" py-20 space-y-20">
  <div class="container mx-auto">
    <h1 class="text-left text-7xl pb-2 border-b border-solid border-black inline-block">{{ section.settings.title | escape }}</h1>
  </div>
  
<!-- 
  {%- liquid
    case section.settings.sort
      when 'products_high' or 'products_low'
        assign collections = collections | sort: 'all_products_count'
      when 'date' or 'date_reversed'
        assign collections = collections | sort: 'published_at'
    endcase

    if section.settings.sort == 'products_high' or section.settings.sort == 'date_reversed' or section.settings.sort == 'alphabetical_reversed'
      assign collections = collections | reverse
    endif
  -%}

  <div class="grid gap-6 lg:gap-12 grid-cols-2 lg:grid-cols-4 py-12">
    {% for collection in collections %}
      {% render '[collection]-card' collection:collection class: '' %}
    {% endfor %}
  </div> -->
  {% for collection in collections %}
  <div id="{{ section.id }}-collections[{{collection.id}}]" class="">
    <div class="container mx-auto flex items-center">
        <div class="flex-1">
            <h2 class="text-6xl ">{{collection.title}} ({{collection.products.size}})</h2>
            {% render 'button' url: collection.url text: 'View collection'class: 'mt-6' %}
        </div>
        <div class="flex-1 py-4">
            <div>Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam</div>
        </div>
    </div>
    <div class="mt-8 relative">
        <scrolling-carousel>
                {% case collection.products.size %}
                    {% when 1 %}
                        <ul class="container mx-auto tw-grid w-full gap-10" role="list">
                    {% when 2 %}
                        <ul class="container mx-auto tw-grid md:grid-cols-2 w-full gap-10" role="list">
                    {% when 3 %}
                        <ul class="container mx-auto tw-grid lg:grid-cols-3 w-full gap-10" role="list">
                    {% when 4 %}
                        <ul class="container mx-auto tw-grid md:grid-cols-2 lg:grid-cols-4 w-full gap-10" role="list">
                    {% else %}
                        <ul class="carousel carousel-center space-x-6 w-full {% render '[class]-container-full'  class: '' %}" role="list">
                {% endcase %}
                {%- for product in collection.products -%}
                    <li class="carousel-item py-8 w-[25vw]">
                        {% render '[product]-card' product:product class: '' %}
                    </li>
                {%- endfor -%}
              </ul>
            <scrolling-arrow-left hidden>
                <button class="pointer-events-auto absolute bottom-1/2 left-6 w-16 h-16 rounded-full bg-base-100 bg-opacity-30 hover:bg-opacity-100 hover:shadow  flex justify-center items-center text-4xl translate-y-1/2  transform rotate-180">
                    <svg width="1em" height="1em" fill="none" stroke-width="0.03em" stroke="currentColor" fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8.14 14.74"><g ><polyline  points="0.74 14.07 6.79 7.41 0.74 0.67"/></g></svg>
                </button>
            </scrolling-arrow-left>
            <scrolling-arrow-right hidden>
                <button class="pointer-events-auto absolute bottom-1/2 right-6 w-16 h-16 rounded-full bg-base-100 bg-opacity-30 hover:bg-opacity-100 hover:shadow  flex justify-center items-center text-4xl translate-y-1/2">
                    <svg width="1em" height="1em" fill="none" stroke-width="0.03em" stroke="currentColor" fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8.14 14.74"><g ><polyline points="0.74 14.07 6.79 7.41 0.74 0.67"/></g></svg>
                </button>
            </scrolling-arrow-right>
        </scrolling-carousel>
    </div>
  </div>
{% endfor %}
</div>



{% javascript %}

class ScrollingCarousel extends HTMLElement {
    constructor() {
        super();
        let timer = null
        const start = () => {
            const sroller = this.querySelector('ul')
            const arrowLeft = this.querySelector('scrolling-arrow-left')
            const arrowRight = this.querySelector('scrolling-arrow-right')
            arrowRight.addEventListener('click', () => {
                sroller.scrollLeft = sroller.scrollLeft + sroller.clientWidth
            })
            arrowLeft.addEventListener('click', () => {
                sroller.scrollLeft = sroller.scrollLeft - sroller.clientWidth
            })

            const valid = () => {
                if (sroller.scrollLeft === 0) {
                    arrowLeft.setAttribute('hidden', true)
                } else {
                    arrowLeft.removeAttribute('hidden')
                }
                if (sroller.scrollLeft + sroller.clientWidth === sroller.scrollWidth) {
                    arrowRight.setAttribute('hidden', true)
                } else {
                    arrowRight.removeAttribute('hidden')
                }
            }
            sroller.addEventListener('scroll', () => {
                if (timer !== null) {
                    clearTimeout(timer);
                }
                timer = setTimeout(valid, 150);
            }, false);

            valid()

        }
        const handleIntersection = (entries, observer) => {
            if (!entries[0].isIntersecting) 
                return;
            

            observer.unobserve(this);
            start()
        }
        new IntersectionObserver(handleIntersection.bind(this), {
            rootMargin: '0px 0px 500px 0px'
        }).observe(this);
    }
}
customElements.define('scrolling-carousel', ScrollingCarousel);

{% endjavascript %}
{% schema %}
{
  "name": "t:sections.main-list-collections.name",
  "class": "spaced-section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "t:sections.main-list-collections.settings.title.label",
      "default": "Collections"
    },
    {
      "type": "select",
      "id": "sort",
      "options": [
        {
          "value": "alphabetical",
          "label": "t:sections.main-list-collections.settings.sort.options__1.label"
        },
        {
          "value": "alphabetical_reversed",
          "label": "t:sections.main-list-collections.settings.sort.options__2.label"
        },
        {
          "value": "date_reversed",
          "label": "t:sections.main-list-collections.settings.sort.options__3.label"
        },
        {
          "value": "date",
          "label": "t:sections.main-list-collections.settings.sort.options__4.label"
        },
        {
          "value": "products_high",
          "label": "t:sections.main-list-collections.settings.sort.options__5.label"
        },
        {
          "value": "products_low",
          "label": "t:sections.main-list-collections.settings.sort.options__6.label"
        }
      ],
      "default": "alphabetical",
      "label": "t:sections.main-list-collections.settings.sort.label"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-list-collections.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.main-list-collections.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.main-list-collections.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.main-list-collections.settings.image_ratio.label",
      "info": "t:sections.main-list-collections.settings.image_ratio.info"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "value": "accent-1",
          "label": "t:sections.main-list-collections.settings.color_scheme.options__1.label"
        },
        {
          "value": "accent-2",
          "label": "t:sections.main-list-collections.settings.color_scheme.options__2.label"
        },
        {
          "value": "background-1",
          "label": "t:sections.main-list-collections.settings.color_scheme.options__3.label"
        },
        {
          "value": "background-2",
          "label": "t:sections.main-list-collections.settings.color_scheme.options__4.label"
        },
        {
          "value": "inverse",
          "label": "t:sections.main-list-collections.settings.color_scheme.options__5.label"
        }
      ],
      "default": "background-1",
      "label": "t:sections.main-list-collections.settings.color_scheme.label"
    },
    {
      "type": "checkbox",
      "id": "image_padding",
      "default": false,
      "label": "t:sections.main-list-collections.settings.image_padding.label"
    }
  ]
}
{% endschema %}
